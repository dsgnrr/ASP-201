@{
    ViewData["Title"] = "Intro";
}

<div class="text-center">
    <h1 class="display-4">Вступ</h1>
</div>
<p>
    ASP - Active Server Pages - фреймворк C# зі створення веб-застосунків
</p>
<p>
    В основі фреймворку - паттерн MVC, у структурі проєкту знаходяться три
    відповідні папки.
    <br />
    Контроллери - класи, що містять методи, які відповідають кожен за свою
    сторінку, точніше, за свою активність.
    <br />
    Представлення - розміткові файли, реалізовані за принципом шаблону.
    Загальне оточення реалізоване у Shared/_Layout.cshtml, внутрішні
    сторінки (RenderBody) - у /Home/*.cshtml файлах
</p>

<p>
    ?Як сервер визначає, що треба запустити відповідний котроллер?<br/>
    !За збігом імен. Частина HTTP-запиту, яка відповідає за контроллер (до
    першого слешу), перевіряється на наявність у папці "Controllers" або
    за прямим збігом Name.cs, або за збігом NameController.cs <br/>
    !! У ASP роль імен досить висока
</p>

<p>
    ?Що означає паттерн у маршрутизаторі ( pattern: "{controller=Home}/{action=Index}/{id?}");)
    <br/>
    !Це задає правило аналізу URL запиту з якого визначаються деталі:<br/>
    - назва контроллера (controller) та значення за замовчанням, якщо
    нічого не буде передано<br />
    - назва методу (action) та його значення за замовчанням (Index)<br />
    - необов'язковий параметр {id?}<br />
    Наприклад, запит "/" не містить жодних даних, відпоідно обирається контроллер
    Home та метод Index.<br/>
    Запит "/Items" звернеть до контроллера "Items" до методу "Index" (за замовчуванням) <br />
    Запит "/Items/Goods" - до методу Goods() контроллера Items.cs
</p>

<p>
    ?Як визначається представлення, що має бути відображене. У всіх методах однакові
    return View();?<br />
    !Так само за іменем методу (action). Відбувається пошук у підпапках "Views" файлу
    з іменем методу розширення ".cshtml". Рекомендується впорядковувати файли
    у папках з іменем контроллерів.
</p>