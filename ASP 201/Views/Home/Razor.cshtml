@{
    ViewData["Title"] = "Razor";
}
<div class="text-center">
    <h1 class="display-4">Основи Razor</h1>
</div>


<p>
    Razor - інструмент для впровадження коду C# у HTML.
    Для чого? HTML з історичних причин має ряд обмежень, головні з яких -
    відсутність умовних блоків, які верста.ться (чи не верстаються) у
    відповідності до значень певних виразів; відсутність самих виразів,
    а також інструкцій повторення (циклів).
</p>
<p>
    Основу синтаксиса складає інструкція &commat;, через що сам символ
    '&commat;'створює помилки компіляції і у розмітці має бути 
    замінений сутністю <b>&amp;commat;</b>
</p>
<p>
    Code Blocks: блок інструкцій (statements) складених мовою C#.
    Блок задається як &commat;{ ... }<br />
    Блоки коду ніяк не відображаються у розмітці, тільки виконують
    інструкції
</p>
@{
    Random rnd = new();
    int x = rnd.Next(3, 15);
    String str = "This is a string";
}
<p>
    Вирази(expressions) - інструкції, що мають резуьтат. Вирази Razor
    це команди вивдення (друку) резуьтату виразу. <br/>
    Неявні (implicit) вирази: &commat;Вираз, наприклад
    &commat;x=@x <br />
    У неявних виразах є певні обмеження: <br/>
    <ul>
        <li>
            вирази, схожі за формою з E-mail адресами: str-length@str.Length<br />
        </li>
        <li>
            вирази-generic, у них типізаця сприймається як тег &commat;List&lt;int>&lt;/int>
        </li>
        <li>
            вирази з операторами: &commat;x -1 = @x-1
        </li>
        <li>
            інші форми складних виразів
        </li>
    </ul>
</p>
<p>
    Явні вирази - використовують круглі дужки для зазначення меж
    виразу: &commat;(...) <br/>
    str-length@str.Length &rarr; str-length@(str.Length) <br/>
    &commat;x-1 = @(x-1) <br/>
</p>
<p>
    Умовні конструкції: &commat;if та &commat;switch <br/>
    У документ потрапить лише один з блоків, описаних у операторах
    (не приховування другого блоку, а його відсутність) <br />
    У тілі блоків інструкції С# "змішуються" з розміткою HTML 
    критерієм розрізнення є теги. Якщо є необхідність зазначити, що
    дана інструкция не є кодом, а є розміткою, то до неї слід додати
    префікс &commat;:
</p>
<p>
    @if(x<10)
    {
        int y = 20;
        <b>Цей блок буде зверстано якщо x &lt; 10</b>
        y
    -= 2;
        <i>Та y буде мати значення @y</i>
        @:Кінець блоку
    }
    else
    {
        int y = 30;
        <b>Цей блок буде зверстано якщо x &ge; 10</b>
        y
        += 2;
        <i>Та y буде мати значення @y</i>
        @:Кінець блоку
    }
</p>
<p>
    @switch(x)
    {
        case 3:
            <i>x=3</i> 
            break;
        case 5:
            <i>x=5</i>
            break;
        default:
            <i>x ані 3, ані 5</i>
            break;
    }
</p>
<p>

</p>
<ul>
    @for (int i = 0; i < x; ++i) 
    {
        <li>рядок з i=@i</li>
    }
</ul>
@{
    String[] items = { "item1", "item two", "third item", "other item" };
}
<ol>
    @foreach(String item in items)
    {
        <li>@item</li>    
    }
</ol>